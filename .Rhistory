}
retrieve_census_data <- function(year, depth_count = 0) {
browser()
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
return(data)
}, error = function(e) {
if(depth_count >= 10) {throw("oops")}
return(retrieve_census_data(year - 1, depth_count + 1))
})
}
census_data <- retrieve_census_data(2030)
function(year, depth_count = 0) {
browser()
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
return(data)
}, error = function(e) {
if(depth_count >= 10) {throw("oops")}
return(retrieve_census_data(year - 1, depth_count + 1))
})
}
year
depth_count
year
depth_count
year
depth_count
year
year
depth_count
depth_count
year
year
depth_count
library(R.oo)
census_data <- retrieve_census_data(2029)
function(year, depth_count = 0) {
browser()
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
return(data)
}, error = function(e) {
if(depth_count >= 10) {throw("oops")}
return(retrieve_census_data(year - 1, depth_count + 1))
})
}
function(year, depth_count = 0) {
browser()
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
return(data)
}, error = function(e) {
if(depth_count >= 10) {throw("oops")}
return(retrieve_census_data(year - 1, depth_count + 1))
})
}
year
year
year
year
depth_count
data
retrieve_census_data <- function(year, depth_count = 0) {
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
return(data)
}, error = function(e) {
if(depth_count >= 10) {return("DAMN")}
return(retrieve_census_data(year - 1, depth_count + 1))
})
}
census_data <- retrieve_census_data(2029)
retrieve_census_data <- function(year, depth_count = 0) {
for(i in 1:10) {
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
return(data)
}, error = function(e) {
if(depth_count >= 10) {return("DAMN")}
depth_count = depth_count + 1
})
}
}
census_data <- retrieve_census_data(2029)
census_data <- retrieve_census_data(2028)
retrieve_census_data <- function(year) {
for(i in 1:10) {
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
return(data)
})
}
return("damn")
}
census_data <- retrieve_census_data(2028)
retrieve_census_data <- function(year) {
for(i in 1:10) {
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
return(data)
}, error = function(e) {
})
}
return("damn")
}
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 1:10) {
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
retrieved_data = T
}, error = function(e) {
})
}
ifelse(retrieved_data, return(data), return(F))
}
census_data <- retrieve_census_data(2028)
census_data <- retrieve_census_data(2019)
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 1:10) {
tryCatch({
data <- tidycensus::load_variables(year, "acs5/subject", cache = TRUE)()
retrieved_data = T
}, error = function(e) {
})
}
ifelse(retrieved_data, return(data), return(F))
}
census_data <- retrieve_census_data(2019)
census_data <- retrieve_census_data(2019)
census_data <- retrieve_census_data(2028)
census_data <- retrieve_census_data(2030)
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)()
retrieved_data = T
}, error = function(e) {
})
}
ifelse(retrieved_data, return(data), return(F))
}
census_data <- retrieve_census_data(2030)
0:10
0:10[1]
0:10[1,]
0:10[,1]
0:10[[1]]
for(i in 0:10) {print(i)}
return(ifelse(retrieved_data, data, F))
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)()
retrieved_data = T
}, error = function(e) {
})
}
return(ifelse(retrieved_data, data, F))
}
census_data <- retrieve_census_data(2030)
census_data <- retrieve_census_data(2019)
census_data <- retrieve_census_data(2019)
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)()
retrieved_data = T
}, error = function(e) {
})
}
print(retrieved_data)
return(ifelse(retrieved_data, data, F))
}
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)()
print(data)
retrieved_data = T
}, error = function(e) {
})
}
print(retrieved_data)
return(ifelse(retrieved_data, data, F))
}
census_data <- retrieve_census_data(2019)
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(2019, "acs5/subject", cache = TRUE)()
print(data)
retrieved_data = T
}, error = function(e) {
})
}
print(retrieved_data)
return(ifelse(retrieved_data, data, F))
}
census_data <- retrieve_census_data(2019)
census_data <- retrieve_census_data(2019)
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(2019, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
}, error = function(e) {
})
}
print(retrieved_data)
return(ifelse(retrieved_data, data, F))
}
census_data <- retrieve_census_data(2019)
census_data <- retrieve_census_data(2028)
census_data <- retrieve_census_data(2030)
census_data <- retrieve_census_data(2030)
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
}, error = function(e) {
})
}
print(retrieved_data)
return(ifelse(retrieved_data, data, F))
}
census_data <- retrieve_census_data(2030)
census_data <- retrieve_census_data(2028)
census_data <- retrieve_census_data(current_year)
if(census_data) { p("Yes")}
if(as.boolean(census_data)) { print("Yes")}
if(as.bool(census_data)) { print("Yes")}
exists(F)
exists("FALSE")
exists("F")
Truthy(data)
if(census_data) { print("Yes")}
isTRUE(census_data)
if(census_data == F) {print("ok")}
if(census_data == "F") {print("ok")}
census_data = F
if(census_data == "F") {print("ok")}
if(census_data == F) {print("ok")}
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
}, error = function(e) {
})
}
print(retrieved_data)
return(ifelse(retrieved_data, data, data.frame()))
}
census_data <- retrieve_census_data(2030)
View(census_data)
if(dim(census_data) == NULL) { print("Yes")}
dim(census_data)
if(isNull(dim(census_data))) { print("Yes")}
if(is.null(dim(census_data))) { print("Yes")}
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
}, error = function(e) {
})
}
return(ifelse(retrieved_data, data, data.frame()))
}
census_data <- retrieve_census_data(current_year)
if(is.null(dim(census_data))) { print("Yes")}
dim(census_data)
census_data <- retrieve_census_data(2500)
if(nrows(census_data) == 0) { print("Yes")}
if(nrow(census_data) == 0) { print("Yes")}
nrow(census_data)
nrow(census_data)
is.NULL(nrow(census_data))
is.null(nrow(census_data))
if(is.null(nrow(census_data))) { print("Yes")}
census_data <- retrieve_census_data(current_year)
if(is.null(nrow(census_data))) { print("Yes")}
nrow_census_data
is.null(nrow(census_data))
View(census_data)
View(census_data)
retrieve_census_data <- function(year) {
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)()
print(data)
retrieved_data = T
}, error = function(e) {
})
}
return(ifelse(retrieved_data, data, data.frame()))
}
census_data <- retrieve_census_data(current_year)
View(census_data)
retrieve_census_data <- function(year) {
data = 0
retrieved_data = FALSE
for(i in 0:10) {
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
}, error = function(e) {
})
}
return(ifelse(retrieved_data, data, data.frame()))
}
census_data <- retrieve_census_data(current_year)
retrieve_census_data <- function(year) {
data = 0
retrieved_data = FALSE
for(i in 0:10) {
if(retrieved_data) {break}
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
}, error = function(e) {
})
}
return(ifelse(retrieved_data, data, data.frame()))
}
census_data <- retrieve_census_data(current_year)
View(census_data)
retrieve_census_data <- function(year) {
data = data.frame()
retrieved_data = FALSE
for(i in 0:10) {
if(retrieved_data) {break}
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
}, error = function(e) {
})
}
return(retrieved_data, data, data.frame)
}
census_data <- retrieve_census_data(current_year)
retrieve_census_data <- function(year) {
data = data.frame()
retrieved_data = FALSE
for(i in 0:10) {
if(retrieved_data) {break}
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
}, error = function(e) {
})
}
return(data)
}
census_data <- retrieve_census_data(current_year)
if(is.null(nrow(census_data))) { print("Yes")}
dim(census_data)
nrow(census_data)
census_data <- retrieve_census_data(2050)
if(is.null(nrow(census_data))) { print("Yes")}
nrow(census_data)
if(is.zero(nrow(census_data))) { print("Yes")}
if(nrow(census_data) == 0) { print("Yes")}
census_data <- retrieve_census_data(current_year)
if(nrow(census_data) == 0) { print("Yes")}
nrow(census_data)
library(readxl)
?source
?readxl
library(readxl)
## Load xlsx requirements
thing <- read_xlsx("ACSRequirements.xlsx", 0)
source('~/R/ACSAutomation/ACSAutomationScript.R', echo=TRUE)
## Load xlsx requirements
thing <- read_xlsx("ACSRequirements.xlsx", 1)
View(thing)
View(census_data)
data2 <- tidycensus::load_variables(year - i, "acs5", cache = TRUE)
View(data2)
## Load xlsx requirements
DEVO <- read_xlsx("ACSRequirements.xlsx", 1)
CNAC <- read_xlsx("ACSRequirements.xlsx", 2)
Parenting <- read_xlsx("ACSRequirements.xlsx", 3)
acs <- tidycensus::get_acs(
geography = "county",  # geography options include "county", "tract", "block group", "state"
state = "48",          # FIPS code 48 for texas
#county = "201",       # can specify certain counties in TX or get all of them
year = 2019,
survey = "acs5",       # designate American Community Survey 5-year estimate. acs1 and others also options
table = "S0101_C01_002",      # found this table number by scanning b19 above
geometry = T,          # include the shape file to enable mapping?
keep_geo_vars = T)     # keep many extra variables related to location (sometimes useful)
acs <- tidycensus::get_acs(
geography = "county",  # geography options include "county", "tract", "block group", "state"
state = "48",          # FIPS code 48 for texas
#county = "201",       # can specify certain counties in TX or get all of them
year = 2019,
survey = "acs5",       # designate American Community Survey 5-year estimate. acs1 and others also options
table = "S0101_C01_002",      # found this table number by scanning b19 above
geometry = T,          # include the shape file to enable mapping?
keep_geo_vars = T)     # keep many extra variables related to location (sometimes useful)
acs <- tidycensus::get_acs(
geography = "county",  # geography options include "county", "tract", "block group", "state"
state = "48",          # FIPS code 48 for texas
#county = "201",       # can specify certain counties in TX or get all of them
year = 2019,
survey = "acs5",       # designate American Community Survey 5-year estimate. acs1 and others also options
table = "B05013_003",      # found this table number by scanning b19 above
geometry = T,          # include the shape file to enable mapping?
keep_geo_vars = T)     # keep many extra variables related to location (sometimes useful)
## Import data
tidycensus::census_api_key("c26a4b8f1ec3d0bcee44f9e2ffd45a94a5f8c034", install = TRUE)
current_year = as.integer(format(Sys.Date(), "%Y"))
latest_year = current_year
retrieve_census_data <- function(year) {
data = data.frame()
retrieved_data = FALSE
for(i in 0:10) {
if(retrieved_data) {break}
tryCatch({
data <- tidycensus::load_variables(year - i, "acs5/subject", cache = TRUE)
print(data)
retrieved_data = T
latest_year = year-i
}, error = function(e) {
})
}
return(data)
}
View(data)
tidycensus::get_acs()
get_acs(geography="county")
acs <- tidycensus::get_acs(
geography = "county",  # geography options include "county", "tract", "block group", "state"
state = "48",          # FIPS code 48 for texas
#county = "201",       # can specify certain counties in TX or get all of them
survey = "acs5",       # designate American Community Survey 5-year estimate. acs1 and others also options
table = "B05013_003",      # found this table number by scanning b19 above
geometry = T,          # include the shape file to enable mapping?
keep_geo_vars = T)     # keep many extra variables related to location (sometimes useful)
acs <- tidycensus::get_acs(
geography = "county",  # geography options include "county", "tract", "block group", "state"
state = "48",          # FIPS code 48 for texas
#county = "201",       # can specify certain counties in TX or get all of them
survey = "acs5",       # designate American Community Survey 5-year estimate. acs1 and others also options
table = "B05013",      # found this table number by scanning b19 above
geometry = T,          # include the shape file to enable mapping?
keep_geo_vars = T)     # keep many extra variables related to location (sometimes useful)
acs <- tidycensus::get_acs(
geography = "county",  # geography options include "county", "tract", "block group", "state"
state = "48",          # FIPS code 48 for texas
#county = "201",       # can specify certain counties in TX or get all of them
survey = "acs5",       # designate American Community Survey 5-year estimate. acs1 and others also options
table = "B05013",      # found this table number by scanning b19 above
geometry = T,          # include the shape file to enable mapping?
keep_geo_vars = T)     # keep many extra variables related to location (sometimes useful)
View(acs)
acs <- tidycensus::get_acs(
geography = "county",  # geography options include "county", "tract", "block group", "state"
state = "48",          # FIPS code 48 for texas
#county = "201",       # can specify certain counties in TX or get all of them
survey = "acs5",       # designate American Community Survey 5-year estimate. acs1 and others also options
table = "S0101",      # found this table number by scanning b19 above
geometry = T,          # include the shape file to enable mapping?
keep_geo_vars = F)     # keep many extra variables related to location (sometimes useful)
View(acs)
acs <- tidycensus::get_acs(
geography = "county",  # geography options include "county", "tract", "block group", "state"
state = "48",          # FIPS code 48 for texas
#county = "201",       # can specify certain counties in TX or get all of them
survey = "acs5",       # designate American Community Survey 5-year estimate. acs1 and others also options
table = "S0101"       # found this table number by scanning b19 above
)
acs <- tidycensus::get_acs(
geography = "county",
state = "48",
year = 2010,
#county = "201",
survey = "acs5",
table = "S0101"
)
acs <- tidycensus::get_acs(
geography = "county",
state = "48",
year = 2010,
#county = "201",
survey = "acs5",
table = "S0101") %>%
filter(NAME="Harrison County, Texas")
library(tidyverse)
